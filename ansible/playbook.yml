---
- hosts: jump
  become: true

  tasks:
    - name: put the key on the jump box to access internal resources
      copy: 
        src: ~/.ssh/id_rsa 
        dest: "/home/ec2-user/.ssh/id_rsa"
        mode: 0600
      with_items:
        - ~/.ssh/id_rsa.pub
        - ~/.ssh/id_rsa


- hosts: cassandra_cluster
  become: true
  vars_files:
    - vars/default.yml

  tasks:
    #- debug: msg="foo={{ hostvars[cassandra_cluster['dba'][0]].foo }}"
    - debug: var=ansible_default_ipv4.address

    - name: Install prerequisites
      yum: name=yum update_cache=yes state=latest
      tags: [ system ]


    - name: install awscli
      yum:
        name: awscli

    - name: install java
      yum:
        name: java-1.8.0-openjdk-devel

    - name: Set up cassandra repo
      template:
        src: "files/cassandra.repo"
        dest: "/etc/yum.repos.d/cassandra.repo"

    - name: install cassandra
      yum:
        name: cassandra

    - name: rm cassandra data
      command: sudo systemctl enable cassandra

    - name: stop cassandra service
      service: name=cassandra state=stopped

    - name: rm cassandra data
      command: sudo rm -rf /var/lib/cassandra/*

    - name: copy cassandra.yaml
      template:
        src: "files/cassandra.yaml.tpl"
        dest: "/etc/cassandra/default.conf/cassandra.yaml"
      vars:
        myTemplateVariable: myDirName

    - name: copy cassandra-rackdc.properties
      template:
        src: "files/cassandra-rackdc.properties"
        dest: "/etc/cassandra/default.conf/cassandra-rackdc.properties"

    - name: enabled cassandra service
      service: name=cassandra state=started

# sudo rm -rf /var/lib/cassandra/*

#
#    - name: stop nginx service
#      service: name=nginx state=stopped
#
#  handlers:
#    - name: Enable cassandra
#      service:
#        name: cassandra
#        state: enabled
#
#    - name: Restart cassandra
#      service:
#        name: cassandra
#        state: restarted

#    - name: Restart Apache
#      service:
#        name: apache2
#        state: restarted

#
#    - name: Install LAMP Packages
#      apt: name={{ item }} update_cache=yes state=latest
#      loop: [ 'apache2', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]
#      tags: [ system ]
#
#    - name: Install PHP Extensions
#      apt: name={{ item }} update_cache=yes state=latest
#      loop: "{{ php_modules }}"
#      tags: [ system ]
#
#  # Apache Configuration
#    - name: Create document root
#      file:
#        path: "/var/www/{{ http_host }}"
#        state: directory
#        owner: "www-data"
#        group: "www-data"
#        mode: '0755'
#      tags: [ apache ]
#
#    - name: Set up Apache VirtualHost
#      template:
#        src: "files/apache.conf.j2"
#        dest: "/etc/apache2/sites-available/{{ http_conf }}"
#      notify: Reload Apache
#      tags: [ apache ]
#
#    - name: Enable rewrite module
#      shell: /usr/sbin/a2enmod rewrite
#      notify: Reload Apache
#      tags: [ apache ]
#
#    - name: Enable new site
#      shell: /usr/sbin/a2ensite {{ http_conf }}
#      notify: Reload Apache
#      tags: [ apache ]
#
#    - name: Disable default Apache site
#      shell: /usr/sbin/a2dissite 000-default.conf
#      notify: Restart Apache
#      tags: [ apache ]
#
#  # WordPress Configuration
#    - name: Download and unpack latest WordPress
#      unarchive:
#        src: https://wordpress.org/latest.tar.gz
#        dest: "/var/www/{{ http_host }}"
#        remote_src: yes
#        creates: "/var/www/{{ http_host }}/wordpress"
#      tags: [ wordpress ]
#
#    - name: Sync persistent data from s3
#      shell: sudo aws s3 sync s3://{{ s3_bucket }} /var/www/your_domain/wordpress/wp-content
#
#    - name: sync data folder every minute
#      shell: echo '* * * * * aws s3 sync /var/www/your_domain/wordpress/wp-content s3://{{ s3_bucket }}' | crontab -
#
#    - name: Set ownership
#      file:
#        path: "/var/www/{{ http_host }}"
#        state: directory
#        recurse: yes
#        owner: www-data
#        group: www-data
#      tags: [ wordpress ]
#
#    - name: Set permissions for directories
#      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"
#      tags: [ wordpress ]
#
#    - name: Set permissions for files
#      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"
#      tags: [ wordpress ]
#
#    - name: Set up wp-config
#      template:
#        src: "files/cassandra.repo"
#        dest: "/etc/yum.repos.d/cassandra.repo"
#      tags: [ wordpress ]
#
#    # - name: sync s3 presistent data
#    #   s3_sync:
#    #     bucket: wp-content-terraform-bucket
#    #     file_root: /var/www/your_domain/wordpress/wp-content
#
#  handlers:
#    - name: Reload Apache
#      service:
#        name: apache2
#        state: reloaded
#
#    - name: Restart Apache
#      service:
#        name: apache2
#        state: restarted
